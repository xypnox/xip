---
import Layout from '../layouts/Layout.astro';
import {cssVal, palette, theme} from '../theme';
import {ThemeEditor} from '../components/editor';
import fs from 'node:fs';
import { Stack } from '@xypnox/xip-ui';

const getRawSvg = async () => {
  // read the svg file
  return fs.promises.readFile('./src/assets/themescura-work.svg')
    .then(response => response.toString())
    .then(text => {
      return text;
    });
}

const svg = await getRawSvg(); 


const usageExample = await (async () => {
  return fs.promises.readFile('./src/theme.ts')
    .then(response => response.toString())
    .then(text => {
      return text;
    });
})();
---

<Layout title="Themescura | xip">
  <h1 class="title">Themescura</h1>
  <p>An Obscura of Variables, Modes and Themes</p>

  <h2>Installation</h2>

  <code>pnpm add @xypnox/themescura</code>

  <h2>Usage</h2>

  <Stack style={{ width: '100%' }}>
    <figure class="full" set:html={svg} />
  </Stack>


  <h2>Demo</h2>

  <p>Note that the palette and components are from xip-ui. Themescura itself is indepndent of the schema of your tokens.</p>

  <ThemeEditor client:load />

  <h3>Base Palette</h3>
  <pre><code set:text={JSON.stringify(palette, null, 2)} /></pre>

  <h3>Generated Theme</h3>
  <pre><code set:text={JSON.stringify(theme, null, 2)} /></pre>

  <h3>Generated CSS</h3>
  <pre><code set:text={cssVal} /></pre>
  <hr />

  <h3>Typography</h3>
  <div>
    {[-2, -1, 0, 1, 2, 3, 4, 5].map((step) => (
    <div style={{ fontSize: `var(--font-size-${step})` }}>
      {`var(--font-size-${step})`}
    </div>
    ))}
  </div>
</Layout>
