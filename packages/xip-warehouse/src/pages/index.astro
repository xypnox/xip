---
import Layout from '../layouts/Layout.astro';
import fs from 'node:fs';

const getRawSvg = async () => {
  // read the svg file
  return fs.promises.readFile('./src/assets/dependce.svg')
    .then(response => response.toString())
    .then(text => {
      return text;
    });
}

const svg = await getRawSvg(); 
---

<Layout title="xip">
  <h1 class="title">xip</h1>
  <p>eXperimental Interfaces Project</p>

  <hr />

  <h2>What is xip?</h2>
  <p>
    [UNDER ACTIVE INVESTIGATION]
  </p>
  <h2>Why?</h2>
  <ul>
    <li>
      <a href="/philosophy">Philosophies</a><br />
      What is lacking, what is being offered, and how much does it hurt
    </li>
    <li>[CLASSIFIED]</li>
  </ul>
  <h2>What projects constitute xip?</h2>
  <figure class="aside right" set:html={svg} />
  <ul>
    <li>
      <a href="/themescura">Themescura</a><br />
      An Obscura of Variables, Modes and Themes
    </li>
    <li>
      xip-ui<br />
      The UI includes building blocks and layout helpers.<br />
      It uses themescura internally and exposes the generated theme to be overridden.
    </li>
    <li>
      xip-editor<br />
      The editor includes the interfaces necessary to edit the theme live adn render the debug information related to the editor.<br />
      It also uses themescura internally and exposes the generated theme to be overridden.
    </li>
    <li>
      xip-warehouse<br />
      Documentation for xip, with a sprinkling of brief demonstrations.<br />
      This right here XD
    </li>
    <br />
    <br />
    <li>[REDACTED]</li>

    <li>[REDACTED]</li>
    <li>[HIDDEN]</li>
  </ul>

  <blockquote>
    The whole point of the rest of the pieces is to make styling a reasonable experience.  (If not an easy one.)
  </blockquote>

  <hr />

  <h2>Showcase</h2>
  <ul>
    <li>
      <a href="https://xypnox.com/">xypnox</a><br />
      An eXperimental implementation of Themescura as a portfolio/blog/gallery/website
    </li>
    <li>[CENSORED]</li>
  </ul>
</Layout>

